// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int       @id @default(autoincrement())
  title                String?
  first_name           String
  father_name          String?
  family_name          String
  gender               String
  email                String    @unique
  phone                String    @unique
  login_name           String    @unique
  password             String
  date_of_birth        DateTime?
  nationalityId        Int?
  passport_number      String?
  passport_expire_date DateTime?
  airway_CompanyId     Int?
  first_login          Boolean   @default(true)
  role                 String    @default("Customer")
  createdAt            DateTime  @default(now())

  Aireway_Company Airway_Company? @relation(fields: [airway_CompanyId], references: [id])
  User_Codes      User_Codes?
  Nationality     Nationality?    @relation(fields: [nationalityId], references: [id])
  Tickets         Ticket[]        @relation("User")
  Reservations    Ticket[]        @relation("Operator")
  Flights         Flight[]
}

model User_Codes {
  id                         Int       @id @default(autoincrement())
  verifyEmailCode            String?
  verifyEmailCodeExpiresAt   DateTime?
  resetPasswordCode          String?
  resetPasswordCodeExpiresAt DateTime?
  resetPasswordCodeVerified  Boolean   @default(false)
  userId                     Int       @unique
  User                       User      @relation(fields: [userId], references: [id])
}

model Airway_Company {
  id        Int       @id @default(autoincrement())
  name      Json      @db.JsonB
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  Employees User[]
  Flights   Flight[]
}

model Nationality {
  id        Int       @id @default(autoincrement())
  name      Json
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  User User[]
}

model Air_Port {
  id                Int       @id @default(autoincrement())
  name              Json
  city              Json
  country           Json
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  deletedAt         DateTime?
  Departing_Flights Flight[]  @relation("from")
  Upcoming_Flights  Flight[]  @relation("to")
}

model Flight {
  id              Int       @id @default(autoincrement())
  flight_number   String    @unique
  from            Int
  to              Int
  number_of_seats Int
  reserved_seats  Int       @default(0)
  ticket_price    Float
  flight_date     DateTime
  operatorId      Int
  airwayCompanyId Int
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?

  Departure_Airport Air_Port       @relation("from", fields: [from], references: [id])
  Arrival_Airport   Air_Port       @relation("to", fields: [to], references: [id])
  Airway_Company    Airway_Company @relation(fields: [airwayCompanyId], references: [id])
  Operator          User          @relation(fields: [operatorId], references: [id])
  Tickets           Ticket[]
}

model Ticket {
  id         Int       @id @default(autoincrement())
  userId     Int
  flightId   Int
  operatorId Int
  seats      Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  canceledAt DateTime?

  User     User   @relation("User", fields: [userId], references: [id])
  Operator User   @relation("Operator", fields: [operatorId], references: [id])
  Flight   Flight @relation(fields: [flightId], references: [id])
}
